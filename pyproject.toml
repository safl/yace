[build-system]
requires = ["setuptools>=60", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "yace"
description = "yace aka Yet Another Code Emitter / Your Artisanal Code Emitter"
requires-python = ">=3.7"
license = { file = "LICENSE" }
authors = [
    { name = "Simon A. F. Lund", email = "os@safl.dk" }
]
maintainers = [
    { name = "Simon A. F. Lund", email = "os@safl.dk" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development",
    "Topic :: Text Processing",
    "Topic :: Utilities"
]
dependencies = [
    "jinja2",
    "pyyaml",
    "pydantic",
    "libclang~=14.0.1",
]
dynamic = ["version"]

[project.readme]
file = "README.rst"
content-type = "text/x-rst; charset=UTF-8"

[tool.setuptools.dynamic]
version = { attr = "yace.__version__" }

[project.optional-dependencies]
dev = [
    "coverage",
    "kmdo",
    "pudb",
    "sphinx",
    "wheel",
]
all = ["yace[dev]"]

[project.scripts]
yace = "yace.cli.yace:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"yace" = ["**/*.clang-format", "**/*.template"]


[tool.ruff]
lint.select = ["E", "F", "I"]
lint.per-file-ignores = { "src/yace/ir/datatypes.py" = ["E742"] }

[tool.pylsp]
[tool.pylsp.plugins]
rope = { enabled = true }